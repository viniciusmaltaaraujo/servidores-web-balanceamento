# ---------------------------------------------------------
# ðŸ”¹ Regra 1001 - Detectar SQL Injection
# - @detectSQLi â†’ usa o operador nativo do ModSecurity para identificar padrÃµes de SQL Injection
# - ARGS â†’ inspeciona todos os parÃ¢metros da requisiÃ§Ã£o (?id=1, ?user=admin, etc.)
# - phase:2 â†’ verifica o corpo da requisiÃ§Ã£o depois do parsing do request
# - block â†’ bloqueia imediatamente se detectar ataque
# - severity: CRITICAL â†’ nÃ­vel de severidade do evento
# ---------------------------------------------------------
SecRule ARGS "@detectSQLi" \
    "id:1001,\
    phase:2,\
    block,\
    msg:'SQL Injection Attack Detected',\
    severity:'CRITICAL'"

# ---------------------------------------------------------
# ðŸ”¹ Regra 1002 - Detectar Cross-Site Scripting (XSS)
# - @detectXSS â†’ operador nativo para encontrar payloads de XSS (<script>, onload, javascript:)
# - ARGS â†’ verifica parÃ¢metros enviados na URL ou no corpo
# - phase:2 â†’ inspeÃ§Ã£o do request body
# - block â†’ bloqueia se identificado
# - severity: CRITICAL â†’ ataque de alta gravidade
# ---------------------------------------------------------
SecRule ARGS "@detectXSS" \
    "id:1002,\
    phase:2,\
    block,\
    msg:'XSS Attack Detected',\
    severity:'CRITICAL'"

# ---------------------------------------------------------
# ðŸ”¹ Regra 1003 - Bloquear User-Agents maliciosos
# - REQUEST_HEADERS:User-Agent â†’ verifica o cabeÃ§alho User-Agent do cliente
# - @pmFromFile /etc/modsecurity.d/malicious-ua.txt â†’ compara contra lista de UAs conhecidos (sqlmap, nikto, etc.)
# - phase:1 â†’ executa bem no inÃ­cio do request
# - block â†’ bloqueia imediatamente
# - severity: WARNING â†’ menos crÃ­tico que SQLi/XSS, mas ainda um indicador de ataque
# ---------------------------------------------------------
SecRule REQUEST_HEADERS:User-Agent "@pmFromFile /etc/modsecurity.d/malicious-ua.txt" \
    "id:1003,\
    phase:1,\
    block,\
    msg:'Malicious User Agent Detected',\
    severity:'WARNING'"

# ---------------------------------------------------------
# ðŸ”¹ Regra 1004 - Rate Limiting customizado por IP
# - IP:REQUEST_COUNT â†’ contador de requisiÃ§Ãµes por endereÃ§o IP
# - @gt 100 â†’ dispara se mais de 100 requisiÃ§Ãµes forem feitas em curto perÃ­odo
# - phase:1 â†’ analisa logo no comeÃ§o do processamento
# - block â†’ bloqueia apÃ³s atingir o limite
# - severity: WARNING â†’ indica abuso ou tentativa de DoS
# ---------------------------------------------------------
SecRule IP:REQUEST_COUNT "@gt 100" \
    "id:1004,\
    phase:1,\
    block,\
    msg:'Rate Limit Exceeded',\
    severity:'WARNING'"
