user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Bloco Upstream - Define o pool de servidores backend com Health Checks Passivos e Backup
    upstream my_app_backends {
        server backend-app-1:80 max_fails=1 fail_timeout=5s;
        server backend-app-2:80 max_fails=1 fail_timeout=5s;
        server backend-app-backup:80 backup;
    }
        
    # Server Block - Nginx atuando como proxy reverso para o upstream
    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://my_app_backends;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header X-Backend-Server $upstream_addr;
        }
        
        # NOVO: Endpoint para o Status do Nginx
        location /nginx_status {
            stub_status on; # Habilita o módulo de status
            access_log off; # Desabilita logs de acesso para este endpoint (opcional, para não poluir)
            allow 172.0.0.0/8; # Permite acesso da rede Docker (ou do host Docker, dependendo da configuração)
                               # Para simplificar na aula, se precisar acessar do host, pode ser 'allow all;'
            deny all;          # Nega acesso de qualquer outro lugar (boa prática de segurança)
            # Para um ambiente local de hands-on, 'allow 127.0.0.1;' ou 'allow all;' pode ser mais simples se o 'curl' for do host.
            # Vamos usar 'allow all;' para facilitar a demonstração no terminal do host.
            allow all; # Para facilitar o curl do host na demonstração
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}