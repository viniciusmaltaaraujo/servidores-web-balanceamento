user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # TIMEOUTS REDUZIDOS — para que o failover seja percebido rapidamente
    proxy_connect_timeout 2s;   # tempo máximo para abrir conexão com backend
    proxy_send_timeout    3s;   # tempo máximo para enviar requisição
    proxy_read_timeout    3s;   # tempo máximo esperando resposta

    # Bloco Upstream - Define o pool de servidores backend com Health Checks Passivos e Backup
    upstream my_app_backends {
        # Servidores primários: max_fails=1 para detectar falha na primeira requisição, fail_timeout=5s para remover por 5s
        server backend-app-1:80 max_fails=1 fail_timeout=5s;
        server backend-app-2:80 max_fails=1 fail_timeout=5s;
        
        # Servidor de backup: só recebe tráfego se todos os primários estiverem offline
        server backend-app-backup:80 backup; 
    }

    # Server Block - Nginx atuando como proxy reverso para o upstream
    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://my_app_backends; # Referencia o nome do bloco upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Adicionar um header para identificar o backend que respondeu (útil para debug)
            add_header X-Backend-Server $upstream_addr;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}