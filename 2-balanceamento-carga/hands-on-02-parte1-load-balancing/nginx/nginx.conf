user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Bloco Upstream - Define o pool de servidores backend
    upstream my_app_backends {
        # Método Round Robin é o padrão.
        server backend-app-1:80; # Nome do serviço do Docker Compose e porta interna
        server backend-app-2:80;
        server backend-app-3:80;

        # Para Least Connections, descomente a linha abaixo e comente a linha "server..." acima.
        #least_conn;
        #server backend-app-1:80;
        #server backend-app-2:80;
        #server backend-app-3:80;
        #server backend-app-4:80;  # "/" lento (~5s) no Node do backend-4
        
          
        # Para IP Hash, descomente a linha abaixo e comente a linha "server..." acima.
         #ip_hash;
         #server backend-app-1:80;
         #server backend-app-2:80;
         #server backend-app-3:80;

        # Para Weight (exemplo: backend-app-2 recebe mais requisições)
         #server backend-app-1:80;
         #server backend-app-2:80 weight=4; 
         #server backend-app-3:80;
    }

    # Server Block - Nginx atuando como proxy reverso para o upstream
    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://my_app_backends; # Referencia o nome do bloco upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Adicionar um header para identificar o backend que respondeu (opcional, para debug)
            add_header X-Backend-Server $upstream_addr;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html; # Pode ser um diretório para páginas de erro estáticas
        }
    }
}